#!/usr/bin/bash

# Check param number
if [[ "$#" -ne 1 ]]; then
	echo "Usage: $0 <IP>"
	exit 1
fi

# Global variables
ip="$1"
nmapg="nmap-openports-$ip.gnmap"
nmaps="nmap-services-$ip.nmap"
services=("ftp" "ssh" "smtp" "http" "netbios-ssn" "sql" "mysql" "postgresql" "vnc")

# Create the directories
if [[ ! -d "$ip" ]]; then
	mkdir -p "$ip/nmap"
fi

cd $ip

# Scan the IP to get the open ports
nmap -n -Pn -p- $ip --open -oG "nmap/$nmapg"

# Scan the IP to get the services only on open ports
## Get the ports
openports=$(perl -ne '$host = $1 if /^Host: (\S+)/; while(m,(\d+)/open,g) { print "$1," } ' < "nmap/$nmapg" | sed 's/,$//')
## Scan services
nmap -n -Pn -p "$openports" -sV $ip -oN "nmap/$nmaps"

# Get the open services in a temporary file
tempservices=$(mktemp)
grep "open" "nmap/$nmaps" > $tempservices

# Parse the services
# Create the directories for typical services
# Scan vulns on those services
while read line
do
	# Get fields
	port=$(echo $line | awk '{print $1}')
	service=$(echo $line | awk '{print $3}')
	version=$(echo $line | awk '{ for (i=4; i<=NF; i++) printf "%s ", $i; printf "\n" }')

	if [[ ${services[@]} =~ $service ]]; then
		# Create directories if it doesn't exists
		## Nmap
		if [[ ! -d "nmap/$service" ]]; then
			mkdir -p "nmap/$service"
		fi
		## Services
		if [[ ! -d "$service" ]]; then
			mkdir -p "$service"
		fi

		# Scan for vulns by service and store the results in their
		# directory with nmap metasploit and more
		p=$(echo $port |awk -F'/' '{print $1}')
		nmap -n -Pn -T4 -sT --script "*$service*" -p $p $ip -oA "nmap/$service/nmap-vulns"
		#nmap -n -Pn -T4 -sT --script vuln -p $p $ip -oA "nmap/$service/nmap-vulns"
		searchsploit "$version" > "$service/exploits.txt"

		case $service in
			"ftp")
				#hydra -l root -P /usr/share/wordlists/rockyou.txt -t 32 $ip ftp -o "$service/hydra-root-login"
				msfconsole -q -x "use auxiliary/scanner/ftp/anonymous; set RHOSTS $ip; set RPORT 21; run; exit" > "$service/metasploit.txt" && msfconsole -q -x "use auxiliary/scanner/ftp/ftp_version; set RHOSTS $ip; set RPORT 21; run; exit" >> "$service/metasploit.txt" && msfconsole -q -x "use auxiliary/scanner/ftp/bison_ftp_traversal; set RHOSTS $ip; set RPORT 21; run; exit" >> "$service/metasploit.txt" && msfconsole -q -x "use auxiliary/scanner/ftp/colorado_ftp_traversal; set RHOSTS $ip; set RPORT 21; run; exit" >> "$service/metasploit.txt" &&  msfconsole -q -x "use auxiliary/scanner/ftp/titanftp_xcrc_traversal; set RHOSTS $ip; set RPORT 21; run; exit" >> "$service/metasploit.txt"
				;;

			"ssh")
				#hydra -v -V -u -l root -P /usr/share/wordlists/rockyou.txt -t 1 $ip ssh -o "$service/hydra-root-login"
				msfconsole -q -x "use auxiliary/scanner/ssh/ssh_version; set RHOSTS $ip; set RPORT 22; run; exit" > "$service/metasploit.txt" && msfconsole -q -x "use scanner/ssh/ssh_enumusers; set RHOSTS $ip; set RPORT 22; run; exit" >> "$service/metasploit.txt" && msfconsole -q -x "use auxiliary/scanner/ssh/juniper_backdoor; set RHOSTS $ip; set RPORT 22; run; exit" >> "$service/metasploit.txt"
				;;

			"telnet")
				msfconsole -q -x "use auxiliary/scanner/telnet/telnet_version; set RHOSTS $ip; set RPORT 23; run; exit" > "$service/metasploit.txt" && msfconsole -q -x "use auxiliary/scanner/telnet/brocade_enable_login; set RHOSTS $ip; set RPORT 23; run; exit" >> "$service/metasploit.txt" && msfconsole -q -x "use auxiliary/scanner/telnet/telnet_encrypt_overflow; set RHOSTS $ip; set RPORT 23; run; exit" >> "$service/metasploit.txt" && msfconsole -q -x "use auxiliary/scanner/telnet/telnet_ruggedcom; set RHOSTS $ip; set RPORT 23; run; exit" >> "$service/metasploit.txt"
				;;

			"http")
				/usr/share/zaproxy/zap.sh -cmd -zapit "http://$ip:$p" > "$service/http-$p-info"
				/usr/share/zaproxy/zap.sh -cmd -quickurl "http://$ip:$p" -quickprogress > "$service/http-$p-scan"

			esac
	fi

done < $tempservices

# Clean up
if [[ -e "$tempservices" ]]; then
	rm "$tempservices"
fi
rm $tempservices
